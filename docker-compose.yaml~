name: ${SERVER_NAME:-local_server}

services:
  django_app:
    build:
      context: .
    image: django_app:latest
    ports:
      - "${DJANGO_APP_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    command: bash -c "
      python manage.py collectstatic --no-input &&
      python manage.py migrate &&
      uvicorn project.asgi:application --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/django_app
      - media:/django_app/media
      - static:/django_app/static
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "python", "-c", "import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect(('localhost', 8000))" ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build: ./nginx
    image: nginx:latest
    restart: always
    depends_on:
      django_app:
        condition: service_healthy
    ports:
      - ${NGINX_APP_PORT:-80}:80
      - "443:443"
    volumes:
      - media:/app/media
      - static:/app/static
      - ./logs/nginx:/var/log/nginx
      - /root/certbot/conf:/etc/letsencrypt
      - /root/certbot/www:/var/www/certbot
      - /etc/ssl/certs/selfsigned.crt:/etc/ssl/certs/selfsigned.crt:ro
      - /etc/ssl/private/selfsigned.key:/etc/ssl/private/selfsigned.key:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    image: mysql:latest
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - MYSQL_DATABASE=admin
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - MYSQL_USER=${MYSQL_USER:-admin}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-admin}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-admin}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-admin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d admin" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  postgres_data:
  media:
  static: